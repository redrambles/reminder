{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","className","style","backgroundColor","defaultProps","Header","title","showAddTask","faStyle","cursor","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","Tasks","tasks","map","AddTask","addTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","length","alert","type","value","onChange","target","placeholder","checked","currentTarget","App","setShowAddTask","setTasks","newTask","Math","floor","random","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAGMA,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC7B,OAAO,wBAAQA,QAASA,EAASC,UAAU,MAAMC,MAAO,CAAEC,gBAAiBJ,GAApE,SAA8ED,KAGvFD,EAAOO,aAAe,CACpBN,KAAM,MACNC,MAAO,QASMF,QCdTQ,EAAS,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAON,EAA2B,EAA3BA,QAAUO,EAAiB,EAAjBA,YAEjC,OACM,yBAAQN,UAAU,SAAlB,UACI,6BAAKK,IACL,cAAC,EAAD,CAAQN,QAASA,EAASD,MAAOQ,EAAc,OAAS,UAAWT,KAAMS,EAAc,QAAU,YAO7GF,EAAOD,aAAe,CACpBE,MAAO,gCASMD,Q,OCJTG,EAAU,CACZT,MAAO,MACPU,OAAQ,WASGC,EA5BF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAS3B,OACI,sBAAKZ,UAAS,eAAUU,EAAKG,SAAW,WAAa,IAAMC,cARxC,WACnBF,EAASF,EAAKK,KAOd,UACI,+BAAKL,EAAKb,KAAV,IAAgB,cAAC,IAAD,CAASI,MAAOM,EAASR,QAN9B,WACfY,EAASD,EAAKK,UAMV,4BAAIL,EAAKM,UCINC,EAjBD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOP,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChC,OACM,mCACCM,EAAMC,KAAI,SAACT,GAAD,OACN,cAAC,EAAD,CAAoBE,SAAUA,EAAUD,SAAUA,EAAUD,KAAMA,GAAvDA,EAAKK,UCiDdK,EArDC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EAEHC,mBAAS,IAFN,mBAEpBzB,EAFoB,KAEd0B,EAFc,OAGLD,mBAAS,IAHJ,mBAGpBN,EAHoB,KAGfQ,EAHe,OAIKF,oBAAS,GAJd,mBAIpBT,EAJoB,KAIVY,EAJU,KA8B3B,OACI,uBAAMzB,UAAU,WAAW0B,SAbZ,SAACC,GAChBA,EAAEC,iBACkB,IAAhB/B,EAAKgC,QAITR,EAAQxB,EAAMmB,EAAKH,GACnBU,EAAQ,IACRC,EAAO,IACPC,GAAY,IANRK,MAAM,yBAUV,UACI,sBAAK9B,UAAU,eAAf,UACI,yCACA,uBAAO+B,KAAK,OAAOC,MAAOnC,EAAMoC,SA5BvB,SAACN,GAClBJ,EAAQI,EAAEO,OAAOF,QA2B+CG,YAAY,gBAExE,sBAAKnC,UAAU,mBAAf,UACI,+CACA,uBAAO+B,KAAK,OAAOC,MAAOhB,EAAKmB,YAAY,mBAAmBF,SA5BlD,SAACN,GACrBH,EAAOG,EAAEO,OAAOF,aA6BZ,sBAAKhC,UAAU,kCAAf,UACI,6CACA,uBAAO+B,KAAK,WAAWC,MAAOnB,EAAUuB,QAASvB,EAAUoB,SA5BlD,SAACN,GAClBF,EAAYE,EAAEU,cAAcD,eA6BxB,uBAAOpC,UAAU,gBAAiB+B,KAAK,SAASC,MAAM,kBCuBnDM,MAhEf,WAAiB,IAAD,EACwBhB,oBAAS,GADjC,mBACPhB,EADO,KACMiC,EADN,OAEYjB,mBAAS,CACjC,CACEP,GAAI,EACJlB,KAAM,iBACNmB,IAAK,wBACLH,UAAU,GAEZ,CACEE,GAAI,EACJlB,KAAM,iBACNmB,IAAK,uBACLH,UAAU,GAEZ,CACEE,GAAI,EACJlB,KAAM,uBACNmB,IAAK,uBACLH,UAAU,KAnBA,mBAEPK,EAFO,KAEAsB,EAFA,KAqDd,OACE,sBAAKxC,UAAU,YAAf,UACA,cAAC,EAAD,CAAQK,MAAM,eAAeN,QANb,WAChBwC,GAAgBjC,IAKiCA,YAAaA,IAC7DA,GAAe,cAAC,EAAD,CAASe,QAjBX,SAACxB,EAAMmB,EAAKH,GAC1B,IAAM4B,EAAU,CACd1B,GAAI2B,KAAKC,MAAsB,IAAhBD,KAAKE,SAAmB,GACvC/C,OACAmB,MACAH,YAEF2B,EAAS,GAAD,mBAAKtB,GAAL,CAAYuB,QAWnBvB,EAAMW,OAAS,EACd,cAAC,EAAD,CAAOlB,SAnCQ,SAACI,GAClByB,EAAStB,EAAM2B,QAAO,SAACnC,GAAD,OACnBA,EAAKK,KAAOA,OAiCgBH,SA5BV,SAACG,GACtByB,EAAStB,EAAMC,KAAI,SAACT,GAClB,OAAIA,EAAKK,KAAOA,EACP,2BAAIL,GAAX,IAAiBG,UAAWH,EAAKG,WAE5BH,OAuBgDQ,MAAOA,IAC9D,8BCtDS4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.da6f5496.chunk.js","sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ text, color, onClick }) => {\n  return <button onClick={onClick} className=\"btn\" style={{ backgroundColor: color }}>{text}</button>;\n};\n\nButton.defaultProps = {\n  text: \"Add\",\n  color: \"#333\"\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nexport default Button;\n","/* eslint-disable react/react-in-jsx-scope */\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nconst Header = ({ title, onClick , showAddTask}) => {\n\n  return (\n        <header className=\"header\">\n            <h1>{title}</h1>\n            <Button onClick={onClick} color={showAddTask ? \"#222\" : \"#25915a\"} text={showAddTask ? \"Close\" : \"Add\"}/>\n        </header>\n  );\n};\n\n// If not props are passed to the component where it is called \\\n// the default will kick in.\nHeader.defaultProps = {\n  title: \"This is the header component\"\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  showAddTask: PropTypes.bool\n};\n\nexport default Header;\n","/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/prop-types */\nimport PropTypes from \"prop-types\";\nimport { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({task, onDelete, onToggle}) => {\n\n    const ToggleReminder = () => {\n        onToggle(task.id);\n    };\n    const removeTask = () => {\n        onDelete(task.id);\n    };\n\n    return (\n        <div className={`task ${task.reminder ? \"reminder\" : \"\"}`} onDoubleClick={ToggleReminder}>\n            <h3>{task.text} <FaTimes style={faStyle} onClick={removeTask}/></h3>\n            <p>{task.day}</p>\n        </div>\n    );\n};\n\nconst faStyle = {\n    color: \"red\",\n    cursor: \"pointer\"\n};\n\nTask.propTypes = {\n   text: PropTypes.string,\n   deleteTask: PropTypes.func\n};\n\n\nexport default Task;\n","/* eslint-disable react/react-in-jsx-scope */\nimport PropTypes from \"prop-types\";\nimport Task from \"./Task\";\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n        <>\n        {tasks.map((task) => (\n             <Task key={task.id} onToggle={onToggle} onDelete={onDelete} task={task}/>\n        ))}\n        </>\n  );\n};\n\n\nTasks.propTypes = {\n    tasks: PropTypes.array,\n    onDelete: PropTypes.func,\n    onToggle: PropTypes.func\n};\n  \nexport default Tasks;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\n\nconst AddTask = ({addTask}) => {\n\n    const [text, setText] = useState(\"\");\n    const [day, setDay] = useState(\"\");\n    const [reminder, setReminder] = useState(false);\n\n    const onChangeText = (e) => {\n        setText(e.target.value);\n    };\n\n    const onChangeDayTime = (e) => {\n        setDay(e.target.value);\n    };\n\n    const checkedValue = (e) => {\n        setReminder(e.currentTarget.checked);\n    };\n\n    const createTask = (e) => {\n        e.preventDefault();\n        if (text.length === 0){\n            alert(\"Please enter a task.\");\n            return;\n        }\n        addTask(text, day, reminder);\n        setText(\"\");\n        setDay(\"\");\n        setReminder(false);\n    };\n\n    return (\n        <form className=\"add-form\" onSubmit={createTask}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input type=\"text\" value={text} onChange={onChangeText} placeholder=\"Add Task\"/>\n            </div>\n            <div className=\"form-control day\">\n                <label>Day & Time</label>\n                <input type=\"text\" value={day} placeholder=\"Add Day and Time\" onChange={onChangeDayTime}/>\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Reminder</label>\n                <input type=\"checkbox\" value={reminder} checked={reminder} onChange={checkedValue} />\n            </div>\n            <input className=\"btn btn-block\"  type=\"submit\" value=\"Save Task\" />\n        </form>\n    );\n};\n\nAddTask.propTypes = {\n    addTask: PropTypes.func,\n};\n\nexport default AddTask;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App () {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Go to Pharmacy\",\n      day: \"March 10th at 10:30am\",\n      reminder: true\n    },\n    {\n      id: 2,\n      text: \"Submit invoice\",\n      day: \"March 12th at 9:00am\",\n      reminder: true\n    },\n    {\n      id: 3,\n      text: \"Fill out application\",\n      day: \"March 20th at 5:00pm\",\n      reminder: false\n    }\n  ]);\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => (\n       task.id !== id\n     ))\n    );\n  };\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => {\n      if (task.id === id){\n        return {...task, reminder: !task.reminder};\n      }\n      return task;\n    }));\n  };\n\n  const addTask = (text, day, reminder) => {\n    const newTask = {\n      id: Math.floor(Math.random() * 10000 + 1),\n      text,\n      day,\n      reminder\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  const onAddTask = () =>{\n    setShowAddTask(!showAddTask);\n  };\n\n  return (\n    <div className=\"container\">\n    <Header title=\"Task Tracker\" onClick={onAddTask} showAddTask={showAddTask} />\n    {showAddTask && <AddTask addTask={addTask}/>}\n    {tasks.length > 0 ? \n      <Tasks onDelete={deleteTask} onToggle={toggleReminder} tasks={tasks}/>\n    : \"No tasks at the moment.\"}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}